import { test, expect } from '@playwright/test'

test.describe('Connect Button Control (stacked)', () => {
  test('Loads with expected visuals', async ({ page }) => {
    await page.goto('./examples/components/ConnectButtonControl/stacked')
    await page.waitForURL('*/**/examples/components/ConnectButtonControl/stacked')
    await expect(page.getByRole('heading', { name: 'Connect Button Control (stacked example)' })).toBeVisible()
    const buttonControl = page.getByTestId('connect-button-control')
    await expect(buttonControl).toBeVisible()
    const leftButtons = buttonControl.getByTestId('left-buttons')
    await expect(leftButtons).toBeVisible()
    await expect(leftButtons.getByRole('button', { name: 'Left 1' })).toBeVisible()
    await expect(leftButtons.getByRole('button', { name: 'Left 2' })).toBeVisible()
    await expect(leftButtons.getByRole('button', { name: 'Left 3' })).toBeVisible()
    const rightButtons = buttonControl.getByTestId('right-buttons')
    await expect(rightButtons).toBeVisible()
    await expect(rightButtons.getByRole('button', { name: 'Right Button 1' })).toBeVisible()
    await expect(rightButtons.getByRole('button', { name: 'Right Button 2' })).toBeVisible()
    await expect(rightButtons.getByRole('button', { name: 'Right Button 3' })).toBeVisible()
  })
  test('Error text works as expected', async ({ page }) => {
    await page.goto('./examples/components/ConnectButtonControl/stacked')
    await page.waitForURL('*/**/examples/components/ConnectButtonControl/stacked')
    await expect(page.getByRole('heading', { name: 'Connect Button Control (stacked example)' })).toBeVisible()
    const buttonControl = page.getByTestId('connect-button-control')
    const leftButtons = buttonControl.getByTestId('left-buttons')
    const rightButtons = buttonControl.getByTestId('right-buttons')
    const leftButton1 = leftButtons.getByRole('button', { name: 'Left 1' })
    const leftButton2 = leftButtons.getByRole('button', { name: 'Left 2' })
    const leftButton3 = leftButtons.getByRole('button', { name: 'Left 3' })
    const leftButtonWrappers = await leftButtons.getByTestId('button-wrapper').all()
    expect(leftButtonWrappers.length).toBe(3)
    const rightButtonWrappers = await rightButtons.getByTestId('button-wrapper').all()
    expect(rightButtonWrappers.length).toBe(3)
    // Error text
    const leftButton1Text = leftButtonWrappers[0].getByText('Alert text no jump')
    await expect(leftButton1Text).not.toBeVisible()
    await leftButton1.click()
    await expect(leftButton1Text).toBeVisible()
    // Clearing text works
    await leftButton2.click()
    await expect(leftButton1Text).not.toBeVisible()
    // Can add error text under a different button
    const leftButton3TextUnderRight3 = leftButtonWrappers[2].getByText('Left 3 alert text')
    await expect(leftButton3TextUnderRight3).not.toBeVisible()
    await leftButton3.click()
    await expect(leftButton3TextUnderRight3).toBeVisible()
  })
})
